// radix sort uses the concept of the count sort .

//This modified code includes a radixSort function that iterates through each digit (using powers of 10) and performs counting sort. The countSort function is responsible for sorting the array based on the current digit.


let A = [4, 2, 1, 3];

let ans = radixSort(A);
console.log(ans);

function radixSort(A) {
    let n = A.length;
    // Find the maximum number to know the number of digits
    let max = Math.max(...A);

    // Do counting sort for every digit
    for (let exp = 1; Math.floor(max / exp) > 0; exp *= 10) {
        countSort(A, exp);
    }

    return A;
}

function countSort(A, exp) {
    let n = A.length;
    let output = Array(n).fill(0);//size of the input 
    let count = Array(10).fill(0);// 0 to 9

    // Store count of occurrences in count[]
    for (let i = 0; i < n; i++) {
        count[Math.floor(A[i] / exp) % 10]++;
    }

    // Change count[i] so that count[i] contains actual
    // position of this digit in output[]
    for (let i = 1; i < 10; i++) {
        count[i] += count[i - 1];
    }

    // Build the output array
    for (let i = n - 1; i >= 0; i--) {
        output[count[Math.floor(A[i] / exp) % 10] - 1] = A[i];
        count[Math.floor(A[i] / exp) % 10]--;
    }

    // Copy the output array to A[], so that A[] contains
    // sorted numbers according to the current digit
    for (let i = 0; i < n; i++) {
        A[i] = output[i];
    }
}