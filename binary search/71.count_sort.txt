Problem Description :-

Given an array A. Sort this array using Count Sort Algorithm and return the sorted array.

Problem Constraints:-
1 <= |A| <= 10^5
1 <= A[i] <= 10^5


Input Format:-
The first argument is an integer array A.


Output Format
Return an integer array that is the sorted array A.


Example Input
Input 1:
A = [1, 3, 1]
Input 2:
A = [4, 2, 1, 3]


Example Output
Output 1:
[1, 1, 3]
Output 2:
[1, 2, 3, 4]


Example Explanation
For Input 1:
The array in sorted order is [1, 1, 3].
For Input 2:
The array in sorted order is [1, 2, 3, 4].

================================================================================================================================================================================================================================

let A = [4, 2, 1, 3];

let ans = solve(A)
console.log(ans)

function solve(A) {
    let n = A.length;
    // step-1 : maximum element in the array , which will  be maximum size of the frequency array.
    let k = A[0];
    for (let i = 1; i < n; i++) {
        if (k < A[i]) {
            k = A[i]
        }
    }
    // step-2 :frequency array and store zero in it.
    let count = [];
    for (let i = 0; i <= k; i++) {
        count[i] = 0;
    }
    //step-3 : create a  temp array having same size of original array.
    let b = [];
    for (let i = 0; i < n; i++) {
        b[i] = 0;
    }
    //step-4:- start storing the frequency
    for (let i = 0; i < n; i++) {
        count[A[i]]++
    }
    //step-5- take prefix sum of the freq array.
    for (let i = 1; i <= k; i++) {
        count[i] = count[i] + count[i - 1]
    }
    // start filling from back so as to maintain the stable sorting .
    // --count[A[i]] we are taking it zero based, so decrease one from the frequecy count and asign that place the element A[i]
    for (let i = n - 1; i >= 0; i--) {
        b[--count[A[i]]] = A[i]
    }
    //fill the values of the B into to A, of the same index.
    for (let i = 0; i < n; i++) {
        A[i] = b[i]
    }
    return (A);

}


Drawbacks of count sort :-

1. k value should be flexible . what if the size of the array is 100,but k=10,0000 , so many spaces will remain empty.

2. not work for the -ve value and also the float numbers.
note :- for -ve values , we can normalise them.

3. cannot be applied if the values are different in any range. and this can be overcome by using the radix sort .
================================================================================================================================================================================================================================